version: '3.8'

services:
  nginx:
    container_name: ${APP_NAME}-nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${NGINX_HOST_PORT:-80}:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - main_network
    depends_on:
      - php

  php:
    container_name: ${APP_NAME}-php
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/html
    networks:
      - main_network
    environment:
      COMPOSER_MEMORY_LIMIT: 2G
      DATABASE_URL: "mysql://${DB_USERNAME}:${DB_PASSWORD}@mysql:3306/${DB_DATABASE}"
      MANTICORE_HOST: manticore
      REDIS_URL: "redis://redis:6379"
    depends_on:
      - mysql
      - manticore
      - redis

  mysql:
    container_name: ${APP_NAME}-mysql
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "${MYSQL_HOST_PORT:-3306}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - main_network

  manticore:
    container_name: ${APP_NAME}-manticore
    image: manticoresearch/manticore:latest
    restart: unless-stopped
    ports:
      - "${MANTICORE_HOST_PORT:-9306}:9306"
      - "${MANTICORE_HTTP_PORT:-9308}:9308"
    volumes:
      - manticore_data:/var/lib/manticore
      - ./docker/manticore/manticore.conf:/etc/manticoresearch/manticore.conf
    networks:
      - main_network

  redis:
    container_name: ${APP_NAME}-redis
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - main_network
    command: redis-server --appendonly yes

volumes:
  mysql_data:
    driver: local
  manticore_data:
    driver: local
  redis_data:

networks:
  main_network:
    driver: bridge
    name: ${APP_NAME}-main-network
    ipam:
      driver: default
